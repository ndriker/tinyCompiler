main 

    var a;
{
    let a <- 1;
	let b <- 5;

	while a < 10 do
		let a <- a + 1;
		if a < b then
		    let b <- b - 1;
		fi;
	od;

}.

/*

0: CONST #2
1: CONST #3
2: CONST #0
3: CMP (0) (2)
4: BLE (3) (outerWhileFollow)
5: CONST #1
6: SUBOP (0) (5)
7: CMP (1) (2)
8: BLE (7) (innerWhileFollow)
9: SUBOP (6) (1)















0: CONST #5
1: CONST #6
7: NOP
8: PHI (0) (6)
2: CMP (0) (1)
3: BGE (2) ()
4: NOP
5: CONST #1
6: addop (0) (5)
9: NOP


0:  CONST #5
1:  CONST #6
2:  cmp (0) (1)
3:  bge (2) (7)
4:  CONST #1
5:  subop (0) (4)
6:  bra (9)
7:  nop
8:  addop (0) (4)
9:  nop
10: phi (5) (8)












0: CONST #3
1: CONST #2
2: + ~0 ~1
3: CONST 1
4: + ~2 ~3
5: + ~4 ~1
6: const 5
7: + ~5 ~6
8: + ~7 ~6
9: const 6
10:  - ~9 ~8




main 
{
	let a <- (3) + (2);
	let b <- 6;
	if a < b then
		let a <- a - 1;
		if b > a then
			let a <- a - 1;
		fi;
	else
		let a <- a + 1;
	fi;

}.

0:  CONST #3
1:  CONST #2
2:  add (0) (1)
3:  CONST #6
4:  cmp (2) (3)
5:  bge (4) ()
6:  CONST #1
7:  sub (2) (6)
8:  cmp (3) (7)
9:  ble (8) ()
10: sub (7) (6)
    nop
11: add (2) (6)
    nop




SYM   ID    Scope
a     (2)   MAIN
b     (3)   MAIN
a     (7)   MAIN_IF
a     (10)  MAIN_IF_IF
a     (11)  MAIN_ELSE



*/